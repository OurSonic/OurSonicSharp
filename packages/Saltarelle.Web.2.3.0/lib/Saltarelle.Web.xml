<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Saltarelle.Web</name>
    </assembly>
    <members>
        <member name="T:System.Html.Media.Audio.AnalyserNode">
            <summary>
            This interface represents a node which is able to provide real-time frequency and
            time-domain analysis information. The audio stream will be passed un-processed
            from input to output.
            </summary>
            <reference>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AnalyserNode</reference></member>
        <member name="M:System.Html.Media.Audio.AnalyserNode.GetFloatFrequencyData(System.Collections.TypedArrays.Float32Array)">
            <summary>
            Copies the current frequency data into the passed floating-point array. If the
            array has fewer elements than the frequencyBinCount, the excess elements
            will be dropped.
            </summary>
            <param name="array">The array parameter is where frequency-domain analysis
            data will be copied.</param></member>
        <member name="M:System.Html.Media.Audio.AnalyserNode.GetByteFrequencyData(System.Collections.TypedArrays.Uint8Array)">
            <summary>
            Copies the current frequency data into the passed unsigned byte array. If the
            array has fewer elements than the frequencyBinCount, the excess elements
            will be dropped.
            </summary>
            <param name="array">The array parameter is where frequency-domain analysis
            data will be copied.</param></member>
        <member name="M:System.Html.Media.Audio.AnalyserNode.GetByteTimeDomainData(System.Collections.TypedArrays.Uint8Array)">
            <summary>
            Copies the current time-domain (waveform) data into the passed unsigned byte
            array. If the array has fewer elements than the frequencyBinCount, the excess
            elements will be dropped.
            </summary>
            <param name="array">The array parameter is where time-domain analysis data
            will be copied.</param></member>
        <member name="P:System.Html.Media.Audio.AnalyserNode.FftSize">
            <summary>
            The size of the FFT used for frequency-domain analysis. This must be a power of two.
            </summary></member>
        <member name="P:System.Html.Media.Audio.AnalyserNode.FrequencyBinCount">
            <summary>
            Half the FFT size.
            </summary></member>
        <member name="P:System.Html.Media.Audio.AnalyserNode.MinDecibels">
            <summary>
            The minimum power value in the scaling range for the FFT analysis data
            for conversion to unsigned byte values.
            </summary></member>
        <member name="P:System.Html.Media.Audio.AnalyserNode.MaxDecibels">
            <summary>
            The maximum power value in the scaling range for the FFT analysis data
            for conversion to unsigned byte values.
            </summary></member>
        <member name="P:System.Html.Media.Audio.AnalyserNode.SmoothingTimeConstant">
            <summary>
            A value from 0 -&gt; 1 where 0 represents no time averaging with the last
            analysis frame.
            </summary></member>
        <member name="T:System.Html.Media.Audio.AudioBuffer">
            <summary>
            This interface represents a memory-resident audio asset (for one-shot sounds and other
            short audio clips). Its format is non-interleaved IEEE 32-bit linear PCM with a nominal
            range of -1 -&gt; +1. It can contain one or more channels.
            </summary></member>
        <member name="P:System.Html.Media.Audio.AudioBuffer.SampleRate">
            <summary>
            The sample-rate for the PCM audio data in samples per second.
            </summary></member>
        <member name="P:System.Html.Media.Audio.AudioBuffer.Length">
            <summary>
            Length of the PCM audio data in sample-frames.
            </summary></member>
        <member name="P:System.Html.Media.Audio.AudioBuffer.Duration">
            <summary>
            Duration of the PCM audio data in seconds.
            </summary></member>
        <member name="P:System.Html.Media.Audio.AudioBuffer.NumberOfChannels">
            <summary>
            The number of discrete audio channels.
            </summary></member>
        <member name="M:System.Html.Media.Audio.AudioBuffer.GetChannelData(System.UInt32)">
            <summary>
            Returns the Float32Array representing the PCM audio data for the specific channel.
            </summary>
            <param name="channel">The channel parameter is an index representing the particular
            channel to get data for. An index value of 0 represents the first channel. This
            index value MUST be less than numberOfChannels or an exception will be thrown.</param>
            <returns>The Float32Array filled with the PCM audio data for the requested channel.</returns></member>
        <member name="T:System.Html.Media.Audio.AudioBufferSourceNode">
            <summary>
            This interface represents an audio source from an in-memory audio
            asset in an AudioBuffer.
            </summary></member>
        <member name="P:System.Html.Media.Audio.AudioBufferSourceNode.PlaybackState">
            <summary>
            The playback state, initialized to AudioBufferSourceNodePlaybackState.UnscheduledState.
            </summary></member>
        <member name="P:System.Html.Media.Audio.AudioBufferSourceNode.Buffer">
            <summary>
            Represents the audio asset to be played.
            </summary></member>
        <member name="P:System.Html.Media.Audio.AudioBufferSourceNode.PlaybackRate">
            <summary>
            The speed at which to render the audio stream. The default playbackRate.value
            is 1. This parameter is a-rate.
            </summary></member>
        <member name="P:System.Html.Media.Audio.AudioBufferSourceNode.Loop">
            <summary>
            Indicates if the audio data should play in a loop. The default value is false.
            </summary></member>
        <member name="P:System.Html.Media.Audio.AudioBufferSourceNode.LoopStart">
            <summary>
            An optional value in seconds where looping should begin if the loop attribute
            is true. Its default value is 0, and it may usefully be set to any value
            between 0 and the duration of the buffer.
            </summary></member>
        <member name="P:System.Html.Media.Audio.AudioBufferSourceNode.LoopEnd">
            <summary>
            An optional value in seconds where looping should end if the loop attribute is
            true. Its default value is 0, and it may usefully be set to any value between
            0 and the duration of the buffer.
            </summary></member>
        <member name="M:System.Html.Media.Audio.AudioBufferSourceNode.Start(System.Double)">
            <summary>
            Schedules a sound to playback at an exact time.
            </summary>
            <param name="when">The when parameter describes at what time (in seconds) the sound
            should start playing. It is in the same time coordinate system as AudioContext.currentTime.
            If 0 is passed in for this value or if the value is less than currentTime, then the
            sound will start playing immediately. start may only be called one time and must be
            called before stop is called or an exception will be thrown.</param></member>
        <member name="M:System.Html.Media.Audio.AudioBufferSourceNode.Start(System.Double,System.Double)">
            <summary>
            Schedules a sound to playback at an exact time.
            </summary>
            <param name="when">The when parameter describes at what time (in seconds) the sound
            should start playing. It is in the same time coordinate system as AudioContext.currentTime.
            If 0 is passed in for this value or if the value is less than currentTime, then the
            sound will start playing immediately. start may only be called one time and must be
            called before stop is called or an exception will be thrown.</param>
            <param name="offset">The offset parameter describes the offset time in the buffer (in
            seconds) where playback will begin.</param></member>
        <member name="M:System.Html.Media.Audio.AudioBufferSourceNode.Start(System.Double,System.Double,System.Double)">
            <summary>
            Schedules a sound to playback at an exact time.
            </summary>
            <param name="when">The when parameter describes at what time (in seconds) the sound
            should start playing. It is in the same time coordinate system as AudioContext.currentTime.
            If 0 is passed in for this value or if the value is less than currentTime, then the
            sound will start playing immediately. start may only be called one time and must be
            called before stop is called or an exception will be thrown.</param>
            <param name="offset">The offset parameter describes the offset time in the buffer (in
            seconds) where playback will begin.</param>
            <param name="duration">The duration parameter describes the duration of the portion
            (in seconds) to be played.</param></member>
        <member name="M:System.Html.Media.Audio.AudioBufferSourceNode.Stop(System.Double)">
            <summary>
            Schedules a sound to stop playback at an exact time.
            </summary>
            <param name="when">The when parameter describes at what time (in seconds) the sound
            should stop playing. It is in the same time coordinate system as AudioContext.currentTime.
            If 0 is passed in for this value or if the value is less than currentTime, then the sound
            will stop playing immediately. stop must only be called one time and only after a call
            to start or stop, or an exception will be thrown.</param></member>
        <member name="T:System.Html.Media.Audio.AudioContext">
            <summary>
            This interface represents a set of AudioNode objects and their connections. It allows for
            arbitrary routing of signals to the AudioDestinationNode (what the user ultimately hears).
            Nodes are created from the context and are then connected together. In most use cases,
            only a single AudioContext is used per document.
            </summary>
            <remarks>Once created, an AudioContext will not be garbage collected. It will live
            until the document goes away.</remarks>
            <reference>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioContext-section</reference></member>
        <member name="M:System.Html.Media.Audio.AudioContext.#ctor">
            <summary>
            Create a new AudioContext.
            </summary></member>
        <member name="P:System.Html.Media.Audio.AudioContext.Destination">
            <summary>
            An AudioDestinationNode with a single input representing the final destination for all
            audio (to be rendered to the audio hardware). All AudioNodes actively rendering audio will
            directly or indirectly connect to destination.
            </summary></member>
        <member name="P:System.Html.Media.Audio.AudioContext.SampleRate">
            <summary>
            The sample rate (in sample-frames per second) at which the AudioContext handles audio. It
            is assumed that all AudioNodes in the context run at this rate. In making this assumption,
            sample-rate converters or "varispeed" processors are not supported in real-time processing.
            </summary></member>
        <member name="P:System.Html.Media.Audio.AudioContext.CurrentTime">
            <summary>
            This is a time in seconds which starts at zero when the context is created and increases in
            real-time. All scheduled times are relative to it. This is not a "transport" time which can be
            started, paused, and re-positioned. It is always moving forward. A GarageBand-like timeline
            transport system can be very easily built on top of this (in JavaScript). This time corresponds
            to an ever-increasing hardware timestamp.
            </summary></member>
        <member name="P:System.Html.Media.Audio.AudioContext.Listener">
            <summary>
            An AudioListener which is used for 3D spatialization.
            </summary></member>
        <member name="P:System.Html.Media.Audio.AudioContext.ActiveSourceCount">
            <summary>
            The number of AudioBufferSourceNodes that are currently playing.
            </summary></member>
        <member name="M:System.Html.Media.Audio.AudioContext.CreateBuffer(System.UInt32,System.UInt32,System.Single)">
            <summary>
            Creates an AudioBuffer of the given size. The audio data in the buffer will be zero-initialized
            (silent). An exception will be thrown if the numberOfChannels or sampleRate are out-of-bounds.
            </summary>
            <param name="numberOfChannels">The numberOfChannels parameter determines how many channels the
            buffer will have. An implementation must support at least 32 channels.</param>
            <param name="length">The length parameter determines the size of the buffer in sample-frames.</param>
            <param name="sampleRate">The sampleRate parameter describes the sample-rate of the linear PCM audio
            data in the buffer in sample-frames per second. An implementation must support sample-rates in at
            least the range 22050 to 96000.</param>
            <returns>Returns the newly created AudioBuffer object.</returns></member>
        <member name="M:System.Html.Media.Audio.AudioContext.CreateBuffer(System.Collections.TypedArrays.ArrayBuffer,System.Boolean)">
            <summary>
            Creates an AudioBuffer given the audio file data contained in the ArrayBuffer. The ArrayBuffer can,
            for example, be loaded from an XMLHttpRequest's response attribute after setting the responseType
            to "arraybuffer". Audio file data can be in any of the formats supported by the audio element.
            </summary>
            <param name="buffer">The buffer parameter contains the audio file data (for example from a
            .wav file).</param>
            <param name="mixToMono">The mixToMono parameter determines if a mixdown to mono will be
            performed. Normally, this would not be set.</param>
            <returns>Returns the newly created AudioBuffer object.</returns></member>
        <member name="M:System.Html.Media.Audio.AudioContext.DecodeAudioData(System.Collections.TypedArrays.ArrayBuffer,System.Action{System.Html.Media.Audio.AudioBuffer})">
            <summary>
            Asynchronously decodes the audio file data contained in the ArrayBuffer. The ArrayBuffer can,
            for example, be loaded from an XMLHttpRequest's response attribute after setting the responseType
            to "arraybuffer". Audio file data can be in any of the formats supported by the audio element.
            </summary>
            <param name="audioData">audioData is an ArrayBuffer containing audio file data.</param>
            <param name="successCallback">successCallback is a callback function which will be invoked when the
            decoding is finished. The single argument to this callback is an AudioBuffer representing the decoded
            PCM audio data.</param></member>
        <member name="M:System.Html.Media.Audio.AudioContext.DecodeAudioData(System.Collections.TypedArrays.ArrayBuffer,System.Action{System.Html.Media.Audio.AudioBuffer},System.Action)">
            <summary>
            Asynchronously decodes the audio file data contained in the ArrayBuffer. The ArrayBuffer can,
            for example, be loaded from an XMLHttpRequest's response attribute after setting the responseType
            to "arraybuffer". Audio file data can be in any of the formats supported by the audio element.
            </summary>
            <param name="audioData">audioData is an ArrayBuffer containing audio file data.</param>
            <param name="successCallback">successCallback is a callback function which will be invoked when the
            decoding is finished. The single argument to this callback is an AudioBuffer representing the decoded
            PCM audio data.</param>
            <param name="errorCallback">errorCallback is a callback function which will be invoked if there is
            an error decoding the audio file data.</param></member>
        <member name="M:System.Html.Media.Audio.AudioContext.CreateBufferSource">
            <summary>
            Creates an AudioBufferSourceNode.
            </summary>
            <returns>The newly created AudioBufferSourceNode object.</returns></member>
        <member name="M:System.Html.Media.Audio.AudioContext.CreateMediaElementSource(System.Html.MediaElement)">
            <summary>
            Creates a MediaElementAudioSourceNode given an HTMLMediaElement. As a consequence of calling this
            method, audio playback from the HTMLMediaElement will be re-routed into the processing graph
            of the AudioContext.
            </summary>
            <param name="mediaElement">mediaElement is an HTMLMediaElement (e.g. audio or video) whose
            audio playback should be rerouted into the AudioContext</param>
            <returns>The newly created MediaElementAudioSourceNode object.</returns></member>
        <member name="M:System.Html.Media.Audio.AudioContext.CreateMediaStreamSource(System.Object)">
            <summary>
            Creates a MediaStreamAudioSourceNode given a MediaStream. As a consequence of calling this method,
            audio playback from the MediaStream will be re-routed into the processing graph of the AudioContext.
            </summary>
            <param name="mediaStream">mediaStream is a MediaStream object whose audio playback should
            be rerouted into the AudioContext</param>
            <returns>The newly created MediaStreamAudioSourceNode object.</returns></member>
        <member name="M:System.Html.Media.Audio.AudioContext.CreateScriptProcessor(System.UInt32)">
            <summary>
            Creates a ScriptProcessorNode for direct audio processing using JavaScript. An exception will be
            thrown if bufferSize or numberOfInputChannels or numberOfOutputChannels are outside the valid range.
            </summary>
            <param name="bufferSize">The bufferSize parameter determines the buffer size in units of sample-frames.
            It must be one of the following values: 256, 512, 1024, 2048, 4096, 8192, 16384. This value controls
            how frequently the onaudioprocess event handler is called and how many sample-frames need to be
            processed each call. Lower values for bufferSize will result in a lower (better) latency. Higher
            values will be necessary to avoid audio breakup and glitches. The value chosen must carefully balance
            between latency and audio quality.</param>
            <returns>The newly created ScriptProcessorNode object.</returns></member>
        <member name="M:System.Html.Media.Audio.AudioContext.CreateScriptProcessor(System.UInt32,System.UInt32)">
            <summary>
            Creates a ScriptProcessorNode for direct audio processing using JavaScript. An exception will be
            thrown if bufferSize or numberOfInputChannels or numberOfOutputChannels are outside the valid range.
            </summary>
            <param name="bufferSize">The bufferSize parameter determines the buffer size in units of sample-frames.
            It must be one of the following values: 256, 512, 1024, 2048, 4096, 8192, 16384. This value controls
            how frequently the onaudioprocess event handler is called and how many sample-frames need to be
            processed each call. Lower values for bufferSize will result in a lower (better) latency. Higher
            values will be necessary to avoid audio breakup and glitches. The value chosen must carefully balance
            between latency and audio quality.</param>
            <param name="numberOfInputChannels">The numberOfInputChannels parameter (defaults to 2) and determines
            the number of channels for this node's input. Values of up to 32 must be supported.</param>
            <returns>The newly created ScriptProcessorNode object.</returns></member>
        <member name="M:System.Html.Media.Audio.AudioContext.CreateScriptProcessor(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            Creates a ScriptProcessorNode for direct audio processing using JavaScript. An exception will be
            thrown if bufferSize or numberOfInputChannels or numberOfOutputChannels are outside the valid range.
            </summary>
            <param name="bufferSize">The bufferSize parameter determines the buffer size in units of sample-frames.
            It must be one of the following values: 256, 512, 1024, 2048, 4096, 8192, 16384. This value controls
            how frequently the onaudioprocess event handler is called and how many sample-frames need to be
            processed each call. Lower values for bufferSize will result in a lower (better) latency. Higher
            values will be necessary to avoid audio breakup and glitches. The value chosen must carefully balance
            between latency and audio quality.</param>
            <param name="numberOfInputChannels">The numberOfInputChannels parameter (defaults to 2) and determines
            the number of channels for this node's input. Values of up to 32 must be supported.</param>
            <param name="numberOfOutputChannels">The numberOfOutputChannels parameter (defaults to 2) and determines
            the number of channels for this node's output. Values of up to 32 must be supported.</param>
            <returns>The newly created ScriptProcessorNode object.</returns></member>
        <member name="M:System.Html.Media.Audio.AudioContext.CreateAnalyser">
            <summary>
            Creates a AnalyserNode.
            </summary>
            <returns>The newly created AnalyserNode object.</returns></member>
        <member name="M:System.Html.Media.Audio.AudioContext.CreateGain">
            <summary>
            Creates a GainNode.
            </summary>
            <returns>The newly created GainNode object.</returns></member>
        <member name="M:System.Html.Media.Audio.AudioContext.CreateDelay">
            <summary>
            Creates a DelayNode representing a variable delay line. The initial default delay
            time will be 0 seconds.
            </summary>
            <returns>The newly created DelayNode object.</returns></member>
        <member name="M:System.Html.Media.Audio.AudioContext.CreateDelay(System.Double)">
            <summary>
            Creates a DelayNode representing a variable delay line. The initial default delay
            time will be 0 seconds.
            </summary>
            <param name="maxDelayTime">The maxDelayTime parameter specifies the maximum
            delay time in seconds allowed for the delay line. If specified, this value
            must be greater than zero and less than three minutes or a NOT_SUPPORTED_ERR
            exception will be thrown.</param>
            <returns>The newly created DelayNode object.</returns></member>
        <member name="M:System.Html.Media.Audio.AudioContext.CreateBiquadFilter">
            <summary>
            Creates a BiquadFilterNode representing a second order filter which can be
            configured as one of several common filter types.
            </summary>
            <returns>The newly created BiquadFilterNode object.</returns></member>
        <member name="M:System.Html.Media.Audio.AudioContext.CreateWaveShaper">
            <summary>
            Creates a WaveShaperNode representing a non-linear distortion.
            </summary>
            <returns>The newly created WaveShaperNode object.</returns></member>
        <member name="M:System.Html.Media.Audio.AudioContext.CreatePanner">
            <summary>
            Creates a PannerNode.
            </summary>
            <returns>The newly created PannerNode object.</returns></member>
        <member name="M:System.Html.Media.Audio.AudioContext.CreateConvolver">
            <summary>
            Creates a ConvolverNode.
            </summary>
            <returns>The newly created ConvolverNode object.</returns></member>
        <member name="M:System.Html.Media.Audio.AudioContext.CreateChannelSplitter">
            <summary>
            Creates an ChannelSplitterNode representing a channel splitter.
            The default number of 6 outputs will be used.
            </summary>
            <returns>The newly created ChannelSplitterNode object.</returns></member>
        <member name="M:System.Html.Media.Audio.AudioContext.CreateChannelSplitter(System.UInt32)">
            <summary>
            Creates an ChannelSplitterNode representing a channel splitter.
            An exception will be thrown for invalid parameter values.
            </summary>
            <param name="numberOfOutputs">The numberOfOutputs parameter determines
            the number of outputs. Values of up to 32 must be supported.</param>
            <returns>The newly created ChannelSplitterNode object.</returns></member>
        <member name="M:System.Html.Media.Audio.AudioContext.CreateChannelMerger">
            <summary>
            Creates an ChannelMergerNode representing a channel merger.
            The default number of 6 inputs will be used.
            </summary>
            <returns>The newly created ChannelMergerNode object.</returns></member>
        <member name="M:System.Html.Media.Audio.AudioContext.CreateChannelMerger(System.UInt32)">
            <summary>
            Creates an ChannelMergerNode representing a channel merger.
            An exception will be thrown for invalid parameter values.
            </summary>
            <param name="numberOfInputs">The numberOfInputs parameter determines the
            number of inputs. Values of up to 32 must be supported.</param>
            <returns>The newly created ChannelMergerNode object.</returns></member>
        <member name="M:System.Html.Media.Audio.AudioContext.CreateDynamicsCompressor">
            <summary>
            Creates a DynamicsCompressorNode.
            </summary>
            <returns>The newly created DynamicsCompressorNode object.</returns></member>
        <member name="M:System.Html.Media.Audio.AudioContext.CreateOscillator">
            <summary>
            Creates an OscillatorNode.
            </summary>
            <returns>The newly created OscillatorNode object.</returns></member>
        <member name="M:System.Html.Media.Audio.AudioContext.CreateWaveTable(System.Collections.TypedArrays.Float32Array,System.Collections.TypedArrays.Float32Array)">
            <summary>
            Creates a WaveTable representing a waveform containing arbitrary harmonic content.  The
            real and imag parameters specify the Fourier coefficients of a Fourier series representing the
            partials of a periodic waveform. The created WaveTable will be used with an OscillatorNode and
            will represent a normalized time-domain waveform having maximum absolute peak value of 1. Another
            way of saying this is that the generated waveform of an OscillatorNode will have maximum peak
            value at 0dBFS. Conveniently, this corresponds to the full-range of the signal values used by the
            Web Audio API. Because the WaveTable will be normalized on creation, the real and imag parameters
            represent relative values.
            </summary>
            <param name="real">The real parameter represents an array of cosine terms (traditionally
            the A terms). In audio terminology, the first element (index 0) is the DC-offset of the periodic
            waveform and is usually set to zero. The second element (index 1) represents the fundamental
            frequency. The third element represents the first overtone, and so on.
            The supplied Float32Array must have a length greater than zero and less than or
            equal to 4096 or an exception will be thrown.</param>
            <param name="imag">The imag parameter represents an array of sine terms (traditionally
            the B terms). The first element (index 0) should be set to zero (and will be ignored) since
            this term does not exist in the Fourier series. The second element (index 1) represents the
            fundamental frequency. The third element represents the first overtone, and so on.
            The supplied Float32Array must have a length greater than zero and less than or
            equal to 4096 or an exception will be thrown.</param>
            <returns>The newly created WaveTable object.</returns></member>
        <member name="T:System.Html.Media.Audio.AudioDestinationNode">
            <summary>
            AudioDestinationNode is an AudioNode representing the final audio destination and is
            what the user will ultimately hear. It can be considered as an audio output device which
            is connected to speakers. All rendered audio to be heard will be routed to this node,
            a "terminal" node in the AudioContext's routing graph. There is only a single
            AudioDestinationNode per AudioContext, provided through the destination attribute
            of AudioContext.
            </summary>
            <reference>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioDestinationNode</reference></member>
        <member name="P:System.Html.Media.Audio.AudioDestinationNode.MaxNumberOfChannels">
            <summary>
            The maximum number of channels that the numberOfChannels attribute can be set to.
            An AudioDestinationNode representing the audio hardware end-point (the normal case) can
            potentially output more than 2 channels of audio if the audio hardware is multi-channel.
            maxNumberOfChannels is the maximum number of channels that this hardware is capable of
            supporting. If this value is 0, then this indicates that maxNumberOfChannels may not be
            changed. This will be the case for an AudioDestinationNode in an OfflineAudioContext.
            </summary></member>
        <member name="P:System.Html.Media.Audio.AudioDestinationNode.NumberOfChannels">
            <summary>
            The number of channels of the destination's input. This value will default to 2, and may
            be set to any non-zero value less than or equal to maxNumberOfChannels. An exception will
            be thrown if this value is not within the valid range. Giving a concrete example, if
            the audio hardware supports 8-channel output, then we may set numberOfChannels
            to 8, and render 8-channels of output.
            </summary></member>
        <member name="T:System.Html.Media.Audio.AudioListener">
            <summary>
            This interface represents the position and orientation of the person listening to the
            audio scene. All PannerNode objects spatialize in relation to the AudioContext's listener.
            </summary>
            <reference>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioListener</reference></member>
        <member name="P:System.Html.Media.Audio.AudioListener.DopplerFactor">
            <summary>
            A constant used to determine the amount of pitch shift to use when rendering a doppler
            effect. The default value is 1.
            </summary></member>
        <member name="P:System.Html.Media.Audio.AudioListener.SpeedOfSound">
            <summary>
            The speed of sound used for calculating doppler shift. The default value is
            343.3 meters / second.
            </summary></member>
        <member name="M:System.Html.Media.Audio.AudioListener.SetPosition(System.Single,System.Single,System.Single)">
            <summary>
            Sets the position of the listener in a 3D cartesian coordinate space. PannerNode
            objects use this position relative to individual audio sources for spatialization.
            </summary>
            <param name="x">The x parameter represents the X coordinate in 3D space.</param>
            <param name="y">The y parameter represents the Y coordinate in 3D space.</param>
            <param name="z">The z parameter represents the Z coordinate in 3D space.</param></member>
        <member name="M:System.Html.Media.Audio.AudioListener.SetOrientation(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Describes which direction the listener is pointing in the 3D cartesian coordinate
            space. Both a front vector and an up vector are provided. In simple human terms,
            the front vector represents which direction the person's nose is pointing. The up
            vector represents the direction the top of a person's head is pointing. These values
            are expected to be linearly independent (at right angles to each other).
            </summary>
            <param name="x">The x parameter represents the X component of a front direction vector
            in 3D space, with the default value being 0.</param>
            <param name="y">The y parameter represents the Y component of a front direction vector
            in 3D space, with the default value being 0.</param>
            <param name="z">The z parameter represents the Z component of a front direction vector
            in 3D space, with the default value being -1.</param>
            <param name="xUp">The xUp parameter represents the X component of an up direction
            vector in 3D space, with the default value being 0.</param>
            <param name="yUp">The yUp parameter represents the Y component of an up direction
            vector in 3D space, with the default value being 1.</param>
            <param name="zUp">The zUp parameter represents the Z component of an up direction
            vector in 3D space, with the default value being 0.</param></member>
        <member name="M:System.Html.Media.Audio.AudioListener.SetVelocity(System.Single,System.Single,System.Single)">
            <summary>
            Sets the velocity vector of the listener. This vector controls both the direction of
            travel and the speed in 3D space. This velocity relative to an audio source's velocity
            is used to determine how much doppler shift (pitch change) to apply. The units used for
            this vector is meters / second and is independent of the units used for position
            and orientation vectors.
            </summary>
            <param name="x">The x parameter describe the X component of a direction vector
            indicating direction of travel and intensity.</param>
            <param name="y">The y parameter describe the Y component of a direction vector
            indicating direction of travel and intensity.</param>
            <param name="z">The z parameter describe the Z component of a direction vector
            indicating direction of travel and intensity.</param></member>
        <member name="T:System.Html.Media.Audio.AudioNode">
            <summary>
            AudioNode represents audio sources, the audio destination, and intermediate processing modules.
            </summary>
            <reference>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioNode-section</reference></member>
        <member name="M:System.Html.Media.Audio.AudioNode.Connect(System.Html.Media.Audio.AudioNode)">
            <summary>
            Connects the AudioNode to another AudioNode.
            </summary>
            <param name="destination">The destination parameter is the AudioNode to connect to.</param></member>
        <member name="M:System.Html.Media.Audio.AudioNode.Connect(System.Html.Media.Audio.AudioNode,System.UInt32)">
            <summary>
            Connects the AudioNode to another AudioNode.
            </summary>
            <param name="destination">The destination parameter is the AudioNode to connect to.</param>
            <param name="output">The output parameter is an index describing which output of the AudioNode
            from which to connect. An out-of-bound value throws an exception.</param></member>
        <member name="M:System.Html.Media.Audio.AudioNode.Connect(System.Html.Media.Audio.AudioNode,System.UInt32,System.UInt32)">
            <summary>
            Connects the AudioNode to another AudioNode.
            </summary>
            <param name="destination">The destination parameter is the AudioNode to connect to.</param>
            <param name="output">The output parameter is an index describing which output of the AudioNode
            from which to connect. An out-of-bound value throws an exception.</param>
            <param name="input">The input parameter is an index describing which input of the destination
            AudioNode to connect to. An out-of-bound value throws an exception.</param></member>
        <member name="M:System.Html.Media.Audio.AudioNode.Connect(System.Html.Media.Audio.AudioParam)">
            <summary>
            Connects the AudioNode to an AudioParam, controlling the parameter value with an audio-rate signal.
            </summary>
            <param name="destination">The destination parameter is the AudioParam to connect to.</param></member>
        <member name="M:System.Html.Media.Audio.AudioNode.Connect(System.Html.Media.Audio.AudioParam,System.UInt32)">
            <summary>
            Connects the AudioNode to an AudioParam, controlling the parameter value with an audio-rate signal.
            </summary>
            <param name="destination">The destination parameter is the AudioParam to connect to.</param>
            <param name="output">The output parameter is an index describing which output of the AudioNode
            from which to connect. An out-of-bound value throws an exception.</param></member>
        <member name="M:System.Html.Media.Audio.AudioNode.Disconnect">
            <summary>
            Disconnects an AudioNode's output.
            </summary></member>
        <member name="M:System.Html.Media.Audio.AudioNode.Disconnect(System.UInt32)">
            <summary>
            Disconnects an AudioNode's output.
            </summary>
            <param name="output">The output parameter is an index describing which output of the
            AudioNode to disconnect. An out-of-bound value throws an exception.</param></member>
        <member name="P:System.Html.Media.Audio.AudioNode.Context">
            <summary>
            The AudioContext which owns this AudioNode.
            </summary></member>
        <member name="P:System.Html.Media.Audio.AudioNode.NumberOfInputs">
            <summary>
            The number of inputs feeding into the AudioNode. This will be 0 for an AudioSourceNode.
            </summary></member>
        <member name="P:System.Html.Media.Audio.AudioNode.NumberOfOutputs">
            <summary>
            The number of outputs coming out of the AudioNode. This will be 0 for an AudioDestinationNode.
            </summary></member>
        <member name="T:System.Html.Media.Audio.AudioParam">
            <summary>
            AudioParam controls an individual aspect of an AudioNode's functioning (e.g., volume).
            </summary>
            <reference>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioParam</reference></member>
        <member name="P:System.Html.Media.Audio.AudioParam.Value">
            <summary>
            The parameter's floating-point value. This attribute is initialized to the defaultValue. If
            a value is set outside the allowable range described by minValue and maxValue no exception is
            thrown, because these limits are just nominal and may be exceeded. If a value is set during
            a time when there are any automation events scheduled then it will be ignored and no
            exception will be thrown.
            </summary></member>
        <member name="P:System.Html.Media.Audio.AudioParam.ComputedValue">
            <summary>
            The final value controlling the audio DSP.
            </summary></member>
        <member name="P:System.Html.Media.Audio.AudioParam.MinValue">
            <summary>
            Nominal minimum value. This attribute is informational and value may be set lower
            than this value.
            </summary></member>
        <member name="P:System.Html.Media.Audio.AudioParam.MaxValue">
            <summary>
            Nominal maximum value. This attribute is informational and value may be set
            higher than this value.
            </summary></member>
        <member name="P:System.Html.Media.Audio.AudioParam.DefaultValue">
            <summary>
            Initial value for the value attribute.
            </summary></member>
        <member name="M:System.Html.Media.Audio.AudioParam.SetValueAtTime(System.Single,System.Double)">
            <summary>
            Schedules a parameter value change at the given time.
            </summary>
            <param name="value">The value parameter is the value the parameter will
            change to at the given time.</param>
            <param name="startTime">The startTime parameter is the time in the same time
            coordinate system as AudioContext.currentTime.</param></member>
        <member name="M:System.Html.Media.Audio.AudioParam.LinearRampToValueAtTime(System.Single,System.Double)">
            <summary>
            Schedules a linear continuous change in parameter value from the previous
            scheduled parameter value to the given value.
            </summary>
            <param name="value">The value parameter is the value the parameter will
            linearly ramp to at the given time.</param>
            <param name="endTime">The endTime parameter is the time in the same time
            coordinate system as AudioContext.currentTime.</param></member>
        <member name="M:System.Html.Media.Audio.AudioParam.ExponentialRampToValueAtTime(System.Single,System.Double)">
            <summary>
            Schedules an exponential continuous change in parameter value from the previous
            scheduled parameter value to the given value. Parameters representing filter
            frequencies and playback rate are best changed exponentially because of the
            way humans perceive sound.
            </summary>
            <param name="value">The value parameter is the value the parameter will
            exponentially ramp to at the given time. An exception will be thrown if this
            value is less than or equal to 0, or if the value at the time of the previous
            event is less than or equal to 0.</param>
            <param name="endTime">The endTime parameter is the time in the same time
            coordinate system as AudioContext.currentTime.</param></member>
        <member name="M:System.Html.Media.Audio.AudioParam.SetTargetAtTime(System.Single,System.Double,System.Double)">
            <summary>
            Start exponentially approaching the target value at the given time with a rate
            having the given time constant. Among other uses, this is useful for implementing
            the "decay" and "release" portions of an ADSR envelope. Please note that the parameter
            value does not immediately change to the target value at the given time, but instead
            gradually changes to the target value.
            </summary>
            <param name="target">The target parameter is the value the parameter will start
            changing to at the given time.</param>
            <param name="startTime">The startTime parameter is the time in the same time
            coordinate system as AudioContext.currentTime.</param>
            <param name="timeConstant">The timeConstant parameter is the time-constant value of
            first-order filter (exponential) approach to the target value. The larger this value
            is, the slower the transition will be.</param></member>
        <member name="M:System.Html.Media.Audio.AudioParam.SetValueCurveAtTime(System.Collections.TypedArrays.Float32Array,System.Double,System.Double)">
            <summary>
            Sets an array of arbitrary parameter values starting at the given time for the given
            duration. The number of values will be scaled to fit into the desired duration.
            </summary>
            <param name="values">The values parameter is a Float32Array representing a parameter value
            curve. These values will apply starting at the given time and lasting for the
            given duration.</param>
            <param name="startTime">The startTime parameter is the time in the same time coordinate
            system as AudioContext.currentTime</param>
            <param name="duration">The duration parameter is the amount of time in seconds (after
            the time parameter) where values will be calculated according to the values parameter.</param></member>
        <member name="M:System.Html.Media.Audio.AudioParam.CancelScheduledValues(System.Double)">
            <summary>
            Cancels all scheduled parameter changes with times greater than or equal to startTime.
            </summary>
            <param name="startTime">The startTime parameter is the starting time at and after which
            any previously scheduled parameter changes will be cancelled. It is a time in the
            same time coordinate system as AudioContext.currentTime.</param></member>
        <member name="T:System.Html.Media.Audio.AudioProcessingEvent">
            <summary>
            This interface is a type of Event which is passed to the onaudioprocess event handler
            used by ScriptProcessorNode.
            </summary>
            <reference>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioProcessingEvent</reference></member>
        <member name="P:System.Html.Media.Audio.AudioProcessingEvent.Node">
            <summary>
            The ScriptProcessorNode associated with this processing event.
            </summary></member>
        <member name="P:System.Html.Media.Audio.AudioProcessingEvent.PlaybackTime">
            <summary>
            The time when the audio will be played in the same time coordinate system as
            AudioContext.currentTime. playbackTime allows for very tight synchronization between
            processing directly in script with the other events in the context's rendering graph.
            </summary></member>
        <member name="P:System.Html.Media.Audio.AudioProcessingEvent.InputBuffer">
            <summary>
            An AudioBuffer containing the input audio data. It will have a number of channels equal
            to the numberOfInputChannels parameter of the createScriptProcessor() method. This
            AudioBuffer is only valid while in the scope of the onaudioprocess function. Its values
            will be meaningless outside of this scope.
            </summary></member>
        <member name="P:System.Html.Media.Audio.AudioProcessingEvent.OutputBuffer">
            <summary>
            An AudioBuffer where the output audio data should be written. It will have a number of
            channels equal to the numberOfOutputChannels parameter of the createScriptProcessor()
            method. Script code within the scope of the onaudioprocess function is expected to
            modify the Float32Array arrays representing channel data in this AudioBuffer. Any script
            modifications to this AudioBuffer outside of this scope will not produce any audible effects.
            </summary></member>
        <member name="T:System.Html.Media.Audio.AudioSourceNode">
            <summary>
            This is an abstract interface representing an audio source, an AudioNode which has no
            inputs and a single output:
            </summary>
            <reference>http://www.w3.org/TR/2012/WD-webaudio-20121213/#AudioSourceNode</reference></member>
        <member name="T:System.Html.Media.Audio.BiquadFilterNode">
            <summary>
            BiquadFilterNode is an AudioNode processor implementing very common low-order filters.
            </summary>
            <reference>http://www.w3.org/TR/2012/WD-webaudio-20121213/#BiquadFilterNode</reference></member>
        <member name="P:System.Html.Media.Audio.BiquadFilterNode.Type">
            <summary>
            The filter type to be implemented by this node.
            </summary></member>
        <member name="P:System.Html.Media.Audio.BiquadFilterNode.Frequency">
            <summary>
            The frequency setting for the selected filter type, in hertz.
            </summary></member>
        <member name="P:System.Html.Media.Audio.BiquadFilterNode.Detune">
            <summary>
            The detune setting for the selected filter type, in cents.
            </summary></member>
        <member name="P:System.Html.Media.Audio.BiquadFilterNode.Q">
            <summary>
            The Q setting for the selected filter type.
            </summary></member>
        <member name="P:System.Html.Media.Audio.BiquadFilterNode.Gain">
            <summary>
            The gain setting for the selected filter type, in decibels.
            </summary></member>
        <member name="M:System.Html.Media.Audio.BiquadFilterNode.GetFrequencyResponse(System.Collections.TypedArrays.Float32Array,System.Collections.TypedArrays.Float32Array,System.Collections.TypedArrays.Float32Array)">
            <summary>
            Given the current filter parameter settings, calculates the frequency response
            for the specified frequencies.
            </summary>
            <param name="frequencyHz">The frequencyHz parameter specifies an array of frequencies
            at which the response values will be calculated.</param>
            <param name="magResponse">The magResponse parameter specifies an output array receiving
            the linear magnitude response values.</param>
            <param name="phaseResponse">The phaseResponse parameter specifies an output array receiving
            the phase response values in radians.</param></member>
        <member name="T:System.Html.Media.Audio.ChannelMergerNode">
            <summary>
            This interface represents an AudioNode for combining channels from multiple audio
            streams into a single audio stream.
            </summary>
            <reference>http://www.w3.org/TR/2012/WD-webaudio-20121213/#ChannelMergerNode</reference></member>
        <member name="T:System.Html.Media.Audio.ChannelSplitterNode">
            <summary>
            This interface represents an AudioNode for accessing the individual channels of an audio
            stream in the routing graph.
            </summary>
            <reference>http://www.w3.org/TR/2012/WD-webaudio-20121213/#ChannelSplitterNode</reference></member>
        <member name="T:System.Html.Media.Audio.ConvolverNode">
            <summary>
            This interface represents a processing node which applies a linear
            convolution effect given an impulse response.
            </summary>
            <reference>http://www.w3.org/TR/2012/WD-webaudio-20121213/#ConvolverNode</reference></member>
        <member name="P:System.Html.Media.Audio.ConvolverNode.Buffer">
            <summary>
            A mono, stereo, or 4-channel AudioBuffer containing the (possibly multi-channel)
            impulse response used by the ConvolverNode. At the time when this attribute is
            set, the buffer and the state of the normalize attribute will be used to configure
            the ConvolverNode with this impulse response having the given normalization.
            </summary></member>
        <member name="P:System.Html.Media.Audio.ConvolverNode.Normalize">
            <summary>
            Controls whether the impulse response from the buffer will be scaled by an equal-power
            normalization when the buffer atttribute is set. Its default value is true in order
            to achieve a more uniform output level from the convolver when loaded with diverse
            impulse responses. If normalize is set to false, then the convolution will be
            rendered with no pre-processing/scaling of the impulse response. Changes to this
            value do not take effect until the next time the buffer attribute is set.
            </summary></member>
        <member name="T:System.Html.Media.Audio.DelayNode">
            <summary>
            This interface is an AudioNode with a single input and single output which delays
            the incoming audio signal by a certain amount.
            </summary>
            <reference>http://www.w3.org/TR/2012/WD-webaudio-20121213/#DelayNode</reference></member>
        <member name="P:System.Html.Media.Audio.DelayNode.DelayTime">
            <summary>
            An AudioParam object representing the amount of delay (in seconds) to apply.
            The default value (delayTime.value) is 0 (no delay). The minimum value is 0
            and the maximum value is determined by the maxDelayTime argument to the
            AudioContext method createDelay. This parameter is k-rate.
            </summary></member>
        <member name="T:System.Html.Media.Audio.DynamicsCompressorNode">
            <summary>
            DynamicsCompressorNode is an AudioNode processor implementing a dynamics compression effect.
            </summary>
            <reference>http://www.w3.org/TR/2012/WD-webaudio-20121213/#DynamicsCompressorNode</reference></member>
        <member name="P:System.Html.Media.Audio.DynamicsCompressorNode.Threshold">
            <summary>
            The decibel value above which the compression will start taking effect. Its default
            value is -24, with a nominal range of -100 to 0.  This parameter is k-rate.
            </summary></member>
        <member name="P:System.Html.Media.Audio.DynamicsCompressorNode.Knee">
            <summary>
            A decibel value representing the range above the threshold where the curve smoothly
            transitions to the "ratio" portion. Its default value is 30, with a nominal range
            of 0 to 40.  This parameter is k-rate.
            </summary></member>
        <member name="P:System.Html.Media.Audio.DynamicsCompressorNode.Ratio">
            <summary>
            The amount of dB change in input for a 1 dB change in output. Its default value is
            12, with a nominal range of 1 to 20.  This parameter is k-rate.
            </summary></member>
        <member name="P:System.Html.Media.Audio.DynamicsCompressorNode.Reduction">
            <summary>
            A read-only decibel value for metering purposes, representing the current amount of
            gain reduction that the compressor is applying to the signal. If fed no signal the
            value will be 0 (no gain reduction). The nominal range is -20 to 0. This
            parameter is k-rate.
            </summary></member>
        <member name="P:System.Html.Media.Audio.DynamicsCompressorNode.Attack">
            <summary>
            The amount of time (in seconds) to reduce the gain by 10dB. Its default value is
            0.003, with a nominal range of 0 to 1.  This parameter is k-rate.
            </summary></member>
        <member name="P:System.Html.Media.Audio.DynamicsCompressorNode.Release">
            <summary>
            The amount of time (in seconds) to increase the gain by 10dB. Its default value
            is 0.250, with a nominal range of 0 to 1.  This parameter is k-rate.
            </summary></member>
        <member name="T:System.Html.Media.Audio.GainNode">
            <summary>
            This interface is an AudioNode with a single input and single output which multiplies
            the input audio signal by the (possibly time-varying) gain attribute, copying the
            result to the output.
            </summary>
            <reference>http://www.w3.org/TR/2012/WD-webaudio-20121213/#GainNode</reference></member>
        <member name="P:System.Html.Media.Audio.GainNode.Gain">
            <summary>
            Represents the amount of gain to apply. Its default value is 1 (no gain change).
            The nominal minValue is 0, but may be set negative for phase inversion. The nominal
            maxValue is 1, but higher values are allowed (no exception thrown).
            This parameter is a-rate.
            </summary></member>
        <member name="T:System.Html.Media.Audio.MediaElementAudioSourceNode">
            <summary>
            MediaElementAudioSourceNode represents an audio source from an audio or video element.
            </summary>
            <reference>http://www.w3.org/TR/2012/WD-webaudio-20121213/#MediaElementAudioSourceNode</reference></member>
        <member name="T:System.Html.Media.Audio.MediaStreamAudioSourceNode">
            <summary>
            This interface represents an audio source from a MediaStream. The first AudioMediaStreamTrack
            from the MediaStream will be used as a source of audio.
            </summary>
            <reference>http://www.w3.org/TR/2012/WD-webaudio-20121213/#MediaStreamAudioSourceNode</reference></member>
        <member name="T:System.Html.Media.Audio.OfflineAudioContext">
            <summary>
            OfflineAudioContext is a particular type of AudioContext for rendering/mixing-down (potentially)
            faster than real-time. It does not render to the audio hardware, but instead renders as quickly
            as possible, calling a render callback function upon completion with the result provided as an AudioBuffer.
            </summary>
            <reference>http://www.w3.org/TR/2012/WD-webaudio-20121213/#OfflineAudioContext-section</reference></member>
        <member name="M:System.Html.Media.Audio.OfflineAudioContext.#ctor(System.UInt32,System.UInt32,System.Single)">
            <summary>
            Creates a new OfflineAudioContext renderer.
            </summary>
            <param name="numberOfChannels">The numberOfChannels parameter specifies the target number
            of channels to render to.</param>
            <param name="length">The length parameter specifies the number of samples to render.</param>
            <param name="sampleRate">The sampleRate parameter specifies the sample rate to render with.</param></member>
        <member name="M:System.Html.Media.Audio.OfflineAudioContext.StartRendering">
            <summary>
            Renders the AudioNodes connected to this context.  The OnComplete callback will be called when
            the rendering has completed.
            </summary></member>
        <member name="P:System.Html.Media.Audio.OfflineAudioContext.OnComplete">
            <summary>
            The callback to call when the rendering operation has completed.
            </summary></member>
        <member name="T:System.Html.Media.Audio.OscillatorNode">
            <summary>
            OscillatorNode represents an audio source generating a periodic waveform.
            </summary>
            <reference>http://www.w3.org/TR/2012/WD-webaudio-20121213/#OscillatorNode</reference></member>
        <member name="P:System.Html.Media.Audio.OscillatorNode.Type">
            <summary>
            The shape of the periodic waveform. It may directly be set to any of the enumeration values
            except for OscillatorType.Custom. The SetWaveTable() method can be used to set a custom
            waveform, which results in this attribute being set to OscillatorType.Custom. The default
            value is OscillatorType.Sine.
            </summary></member>
        <member name="P:System.Html.Media.Audio.OscillatorNode.PlaybackState">
            <summary>
            defined as in AudioBufferSourceNode.
            </summary></member>
        <member name="P:System.Html.Media.Audio.OscillatorNode.Frequency">
            <summary>
            The frequency (in Hertz) of the periodic waveform. This parameter is a-rate.
            </summary></member>
        <member name="P:System.Html.Media.Audio.OscillatorNode.Detune">
            <summary>
            A detuning value (in Cents) which will offset the frequency by the given amount.
            This parameter is a-rate.
            </summary></member>
        <member name="M:System.Html.Media.Audio.OscillatorNode.Start(System.Double)">
            <summary>
            defined as in AudioBufferSourceNode.
            </summary>
            <param name="when"></param></member>
        <member name="M:System.Html.Media.Audio.OscillatorNode.Stop(System.Double)">
            <summary>
            defined as in AudioBufferSourceNode.
            </summary>
            <param name="when"></param></member>
        <member name="M:System.Html.Media.Audio.OscillatorNode.SetWaveTable(System.Html.Media.Audio.WaveTable)">
            <summary>
            Sets an arbitrary custom periodic waveform given a WaveTable.
            </summary>
            <param name="waveTable">The waveTable parameter specifies the wave
            table to use to specify a custom waveform.</param></member>
        <member name="T:System.Html.Media.Audio.PannerNode">
            <summary>
            This interface represents a processing node which positions / spatializes an incoming
            audio stream in three-dimensional space. The spatialization is in relation to the
            AudioContext's AudioListener (listener attribute).
            </summary>
            <reference>http://www.w3.org/TR/2012/WD-webaudio-20121213/#PannerNode</reference></member>
        <member name="P:System.Html.Media.Audio.PannerNode.PanningModel">
            <summary>
            Determines which spatialization algorithm will be used to position the audio in
            3D space. The default is PanningModelType.HRTF.
            </summary></member>
        <member name="M:System.Html.Media.Audio.PannerNode.SetPosition(System.Single,System.Single,System.Single)">
            <summary>
            Sets the position of the audio source relative to the listener attribute. A 3D
            cartesian coordinate system is used.
            </summary>
            <param name="x">The x parameter represents the X coordinate in 3D space.</param>
            <param name="y">The y parameter represents the Y coordinate in 3D space.</param>
            <param name="z">The z parameter represents the Z coordinate in 3D space.</param></member>
        <member name="M:System.Html.Media.Audio.PannerNode.SetOrientation(System.Single,System.Single,System.Single)">
            <summary>
            Describes which direction the audio source is pointing in the 3D cartesian
            coordinate space. Depending on how directional the sound is (controlled by the
            cone attributes), a sound pointing away from the listener can be very quiet or
            completely silent.
            </summary>
            <param name="x">The x parameter represents the X component of a direction vector in 3D space.</param>
            <param name="y">The y parameter represents the Y component of a direction vector in 3D space.</param>
            <param name="z">The z parameter represents the Z component of a direction vector in 3D space.</param></member>
        <member name="M:System.Html.Media.Audio.PannerNode.SetVelocity(System.Single,System.Single,System.Single)">
            <summary>
            Sets the velocity vector of the audio source. This vector controls both the direction
            of travel and the speed in 3D space. This velocity relative to the listener's velocity
            is used to determine how much doppler shift (pitch change) to apply. The units used for
            this vector is meters / second and is independent of the units used for position
            and orientation vectors.
            </summary>
            <param name="x">The x parameter describes the X component of a direction vector indicating
            direction of travel and intensity.</param>
            <param name="y">The y parameter describes the Y component of a direction vector indicating
            direction of travel and intensity.</param>
            <param name="z">The z parameter describes the Z component of a direction vector indicating
            direction of travel and intensity.</param></member>
        <member name="P:System.Html.Media.Audio.PannerNode.DistanceModel">
            <summary>
            Determines which algorithm will be used to reduce the volume of an audio source
            as it moves away from the listener. The default is DistanceModelType.Inverse.
            </summary></member>
        <member name="P:System.Html.Media.Audio.PannerNode.RefDistance">
            <summary>
            A reference distance for reducing volume as source move further from the listener.
            The default value is 1.
            </summary></member>
        <member name="P:System.Html.Media.Audio.PannerNode.MaxDistance">
            <summary>
            The maximum distance between source and listener, after which the volume will not
            be reduced any further. The default value is 10000.
            </summary></member>
        <member name="P:System.Html.Media.Audio.PannerNode.RolloffFactor">
            <summary>
            Describes how quickly the volume is reduced as source moves away from listener.
            The default value is 1.
            </summary></member>
        <member name="P:System.Html.Media.Audio.PannerNode.ConeInnerAngle">
            <summary>
            A parameter for directional audio sources, this is an angle, inside of which there
            will be no volume reduction. The default value is 360.
            </summary></member>
        <member name="P:System.Html.Media.Audio.PannerNode.ConeOuterAngle">
            <summary>
            A parameter for directional audio sources, this is an angle, outside of which the
            volume will be reduced to a constant value of coneOuterGain. The default value is 360.
            </summary></member>
        <member name="P:System.Html.Media.Audio.PannerNode.ConeOuterGain">
            <summary>
            A parameter for directional audio sources, this is the amount of volume reduction
            outside of the coneOuterAngle. The default value is 0.
            </summary></member>
        <member name="T:System.Html.Media.Audio.ScriptProcessorNode">
            <summary>
            This interface is an AudioNode which can generate, process, or analyse audio
            directly using a supplied callback.
            </summary>
            <reference>http://www.w3.org/TR/2012/WD-webaudio-20121213/#ScriptProcessorNode</reference></member>
        <member name="P:System.Html.Media.Audio.ScriptProcessorNode.OnAudioProcess">
            <summary>
            An event listener which is called periodically for audio processing. An event of type
            AudioProcessingEvent will be passed to the event handler.
            </summary></member>
        <member name="P:System.Html.Media.Audio.ScriptProcessorNode.BufferSize">
            <summary>
            The size of the buffer (in sample-frames) which needs to be processed each time
            onprocessaudio is called. Legal values are (256, 512, 1024, 2048, 4096, 8192, 16384).
            </summary></member>
        <member name="T:System.Html.Media.Audio.WaveShaperNode">
            <summary>
            WaveShaperNode is an AudioNode processor implementing non-linear distortion effects.
            </summary>
            <reference>http://www.w3.org/TR/2012/WD-webaudio-20121213/#WaveShaperNode</reference></member>
        <member name="P:System.Html.Media.Audio.WaveShaperNode.Curve">
            <summary>
            The shaping curve used for the waveshaping effect. The input signal is nominally within
            the range -1 -&gt; +1. Each input sample within this range will index into the shaping
            curve with a signal level of zero corresponding to the center value of the curve array.
            Any sample value less than -1 will correspond to the first value in the curve array.
            Any sample value less greater than +1 will correspond to the last value in the curve array.
            </summary></member>
        <member name="T:System.Html.Media.Audio.WaveTable">
            <summary>
            WaveTable represents an arbitrary periodic waveform to be used with an OscillatorNode.
            </summary>
            <reference>http://www.w3.org/TR/2012/WD-webaudio-20121213/#WaveTable</reference></member>
        <member name="T:System.Html.Media.Graphics.WebGL.WebGLActiveInfo">
            <summary>
            The WebGLActiveInfo interface represents the information returned
            from the getActiveAttrib and getActiveUniform calls.
            </summary></member>
        <member name="P:System.Html.Media.Graphics.WebGL.WebGLActiveInfo.Size">
            <summary>
            The size of the requested variable.
            </summary></member>
        <member name="P:System.Html.Media.Graphics.WebGL.WebGLActiveInfo.Type">
            <summary>
            The data type of the requested variable.
            </summary></member>
        <member name="P:System.Html.Media.Graphics.WebGL.WebGLActiveInfo.Name">
            <summary>
            The name of the requested variable.
            </summary></member>
        <member name="T:System.Html.Media.Graphics.WebGL.WebGLBuffer">
            <summary>
            The WebGLBuffer interface represents an OpenGL Buffer Object.
            The underlying object is created as if by calling glGenBuffers,
            bound as if by calling glBindBuffer and destroyed as if
            by calling glDeleteBuffers.
            </summary></member>
        <member name="T:System.Html.Media.Graphics.WebGL.WebGLContextAttributes">
            <summary>
            The WebGLContextAttributes dictionary contains drawing surface
            attributes and is passed as the second parameter to getContext.
            </summary></member>
        <member name="F:System.Html.Media.Graphics.WebGL.WebGLContextAttributes.Alpha">
            <summary>
            If the value is true, the drawing buffer has an alpha channel
            for the purposes of performing OpenGL destination alpha
            operations and compositing with the page.
            If the value is false, no alpha buffer is available.
            </summary></member>
        <member name="F:System.Html.Media.Graphics.WebGL.WebGLContextAttributes.Depth">
            <summary>
            If the value is true, the drawing buffer has a depth buffer of
            at least 16 bits. If the value is false, no depth buffer is available.
            </summary></member>
        <member name="F:System.Html.Media.Graphics.WebGL.WebGLContextAttributes.Stencil">
            <summary>
            If the value is true, the drawing buffer has a stencil buffer
            of at least 8 bits. If the value is false, no stencil buffer is available.
            </summary></member>
        <member name="F:System.Html.Media.Graphics.WebGL.WebGLContextAttributes.Antialias">
            <summary>
            If the value is true and the implementation supports antialiasing
            the drawing buffer will perform antialiasing using its choice of
            technique (multisample/supersample) and quality. If the value is false
            or the implementation does not support antialiasing,
            no antialiasing is performed.
            </summary></member>
        <member name="F:System.Html.Media.Graphics.WebGL.WebGLContextAttributes.PremultipliedAlpha">
            <summary>
            If the value is true the page compositor will assume the drawing buffer
            contains colors with premultiplied alpha. If the value is false the page
            compositor will assume that colors in the drawing buffer are not premultiplied.
            This flag is ignored if the alpha flag is false.
            </summary></member>
        <member name="F:System.Html.Media.Graphics.WebGL.WebGLContextAttributes.PreserveDrawingBuffer">
            <summary>
            If false, once the drawing buffer is presented, the contents of the
            drawing buffer are cleared to their default values. All elements of the
            drawing buffer (color, depth and stencil) are cleared. If the value is
            true the buffers will not be cleared and will preserve their values until
            cleared or overwritten by the author.
            </summary></member>
        <member name="T:System.Html.Media.Graphics.WebGL.WebGLFramebuffer">
            <summary>
            The WebGLFramebuffer interface represents an OpenGL Framebuffer Object.
            The underlying object is created as if by calling glGenFramebuffers,
            bound as if by calling glBindFramebuffer and destroyed as if
            by calling glDeleteFramebuffers.
            </summary></member>
        <member name="T:System.Html.Media.Graphics.WebGL.WebGLObject">
            <summary>
            The WebGLObject interface is the parent interface for all GL objects.
            </summary></member>
        <member name="T:System.Html.Media.Graphics.WebGL.WebGLProgram">
            <summary>
            The WebGLProgram interface represents an OpenGL Program Object.
            The underlying object is created as if by calling glCreateProgram,
            used as if by calling glUseProgram and destroyed as if
            by calling glDeleteProgram.
            </summary></member>
        <member name="T:System.Html.Media.Graphics.WebGL.WebGLRenderbuffer">
            <summary>
            The WebGLRenderbuffer interface represents an OpenGL Renderbuffer Object.
            The underlying object is created as if by calling glGenRenderbuffers,
            bound as if by calling glBindRenderbuffer and destroyed as if by
            calling glDeleteRenderbuffers.
            </summary></member>
        <member name="T:System.Html.Media.Graphics.WebGL.WebGLShader">
            <summary>
            The WebGLShader interface represents an OpenGL Shader Object.
            The underlying object is created as if by calling glCreateShader,
            attached to a Program as if by calling glAttachShader and
            destroyed as if by calling glDeleteShader.
            </summary></member>
        <member name="T:System.Html.Media.Graphics.WebGL.WebGLShaderPrecisionFormat">
            <summary>
            The WebGLShaderPrecisionFormat interface represents the information
            returned from the getShaderPrecisionFormat call.
            </summary></member>
        <member name="P:System.Html.Media.Graphics.WebGL.WebGLShaderPrecisionFormat.RangeMin">
            <summary>
            The base 2 log of the absolute value of the minimum value
            that can be represented.
            </summary></member>
        <member name="P:System.Html.Media.Graphics.WebGL.WebGLShaderPrecisionFormat.RangeMax">
            <summary>
            The base 2 log of the absolute value of the maximum value
            that can be represented.
            </summary></member>
        <member name="P:System.Html.Media.Graphics.WebGL.WebGLShaderPrecisionFormat.Precision">
            <summary>
            The number of bits of precision that can be represented.
            For integer formats this value is always 0.
            </summary></member>
        <member name="T:System.Html.Media.Graphics.WebGL.WebGLTexture">
            <summary>
            The WebGLTexture interface represents an OpenGL Texture Object.
            The underlying object is created as if by calling glGenTextures,
            bound as if by calling glBindTexture and destroyed as if
            by calling glDeleteTextures.
            </summary></member>
        <member name="T:System.Html.Media.Graphics.WebGL.WebGLUniformLocation">
            <summary>
            The WebGLUniformLocation interface represents the location of a uniform variable in a shader program.
            </summary></member>
        <member name="P:System.Html.Plugin.Description">
            <summary>
            A human readable description of the plugin.
            </summary></member>
        <member name="P:System.Html.Plugin.FileName">
            <summary>
            The filename of the plugin file.
            </summary></member>
        <member name="P:System.Html.Plugin.Name">
            <summary>
            The name of the plugin.
            </summary></member>
        <member name="P:System.Html.Plugin.Version">
            <summary>
            The plugin's version number string.
            </summary></member>
        <member name="P:System.Html.PluginArray.Length">
            <summary>
            The number of plugins in the array.
            </summary></member>
        <member name="P:System.Html.PluginArray.Item(System.Int32)">
            <summary>
            Returns the Plugin at the specified index into the array.
            </summary></member>
        <member name="P:System.Html.PluginArray.Item(System.String)">
            <summary>
            Returns the Plugin with the specified name.
            </summary>
            <param name="name"></param>
            <returns></returns></member>
        <member name="M:System.Html.PluginArray.ItemAt(System.Int32)">
            <summary>
            Returns the Plugin at the specified index into the array.
            </summary></member>
        <member name="M:System.Html.PluginArray.NamedItem(System.String)">
            <summary>
            Returns the Plugin with the specified name.
            </summary></member>
        <member name="P:System.Html.Data.ApplicationCache.Status">
            <summary>
            Gets the current status of the application cache.
            </summary></member>
        <member name="M:System.Html.Data.ApplicationCache.SwapCache">
            <summary>
            Replaces the active cache with the latest version.
            </summary></member>
        <member name="M:System.Html.Data.ApplicationCache.Update">
            <summary>
            Manually triggers the update process.
            </summary></member>
        <member name="T:System.Html.Data.ApplicationCacheStatus">
            <summary>
            Indicates the status of the application cache.
            </summary></member>
        <member name="F:System.Html.Data.ApplicationCacheStatus.Uncached">
            <summary>
            The object isn�t associated with an application cache.
            </summary></member>
        <member name="F:System.Html.Data.ApplicationCacheStatus.Idle">
            <summary>
            The cache is idle, i.e. there are no outstanding checks or
            downloads in progress.
            </summary></member>
        <member name="F:System.Html.Data.ApplicationCacheStatus.Checking">
            <summary>
            The update has started but the resources are not downloaded yet.
            </summary></member>
        <member name="F:System.Html.Data.ApplicationCacheStatus.Downloading">
            <summary>
            The resources are being downloaded into the cache.
            </summary></member>
        <member name="F:System.Html.Data.ApplicationCacheStatus.UpdateReady">
            <summary>
            Resources have finished downloading and the new cache
            is ready to be used.
            </summary></member>
        <member name="F:System.Html.Data.ApplicationCacheStatus.Obsolete">
            <summary>
            Resources hare finished downloading, but are obsolete.
            </summary></member>
        <member name="T:System.Html.Data.ApplicationCacheEvent">
            <summary>
            Represents an event raised by the Application Cache.
            </summary></member>
        <member name="F:System.Html.Data.ApplicationCacheEvent.Cached">
            <summary>
            Raised when the update process finishes for the first time
            </summary></member>
        <member name="F:System.Html.Data.ApplicationCacheEvent.Checking">
            <summary>
            Raised when the cache update process begins.
            </summary></member>
        <member name="F:System.Html.Data.ApplicationCacheEvent.Downloading">
            <summary>
            Raised when the update process begins downloading resources
            in the manifest file.
            </summary></member>
        <member name="F:System.Html.Data.ApplicationCacheEvent.Error">
            <summary>
            Raised when an error occurs.
            </summary></member>
        <member name="F:System.Html.Data.ApplicationCacheEvent.NoUpdate">
            <summary>
            Raised when the update process finishes but the manifest
            file does not change.
            </summary></member>
        <member name="F:System.Html.Data.ApplicationCacheEvent.Progress">
            <summary>
            Raised when each resource in the manifest file begins to download.
            </summary></member>
        <member name="F:System.Html.Data.ApplicationCacheEvent.UpdateReady">
            <summary>
            Raised when there is an existing application cache,
            the update process finishes, and there is a new application
            cache ready for use.
            </summary></member>
        <member name="M:System.Html.Document.AddEventListener(System.String,System.Html.ElementEventListener)">
            <summary>
            Adds a listener for the specified event.
            </summary>
            <param name="eventName">The name of the event such as 'load'.</param>
            <param name="listener">The listener to be invoked in response to the event.</param></member>
        <member name="M:System.Html.Document.AddEventListener(System.String,System.Html.ElementEventListener,System.Boolean)">
            <summary>
            Adds a listener for the specified event.
            </summary>
            <param name="eventName">The name of the event such as 'load'.</param>
            <param name="listener">The listener to be invoked in response to the event.</param>
            <param name="useCapture">Whether the listener wants to initiate capturing the event.</param></member>
        <member name="M:System.Html.Document.RemoveEventListener(System.String,System.Html.ElementEventListener)">
            <summary>
            Removes a listener for the specified event.
            </summary>
            <param name="eventName">The name of the event such as 'load'.</param>
            <param name="listener">The listener to be invoked in response to the event.</param></member>
        <member name="M:System.Html.Document.RemoveEventListener(System.String,System.Html.ElementEventListener,System.Boolean)">
            <summary>
            Removes a listener for the specified event.
            </summary>
            <param name="eventName">The name of the event such as 'load'.</param>
            <param name="listener">The listener to be invoked in response to the event.</param>
            <param name="useCapture">Whether the listener wants to initiate capturing the event.</param></member>
        <member name="M:System.Html.DocumentInstance.AddEventListener(System.String,System.Html.ElementEventListener)">
            <summary>
            Adds a listener for the specified event.
            </summary>
            <param name="eventName">The name of the event such as 'load'.</param>
            <param name="listener">The listener to be invoked in response to the event.</param></member>
        <member name="M:System.Html.DocumentInstance.AddEventListener(System.String,System.Html.ElementEventListener,System.Boolean)">
            <summary>
            Adds a listener for the specified event.
            </summary>
            <param name="eventName">The name of the event such as 'load'.</param>
            <param name="listener">The listener to be invoked in response to the event.</param>
            <param name="useCapture">Whether the listener wants to initiate capturing the event.</param></member>
        <member name="M:System.Html.DocumentInstance.RemoveEventListener(System.String,System.Html.ElementEventListener)">
            <summary>
            Removes a listener for the specified event.
            </summary>
            <param name="eventName">The name of the event such as 'load'.</param>
            <param name="listener">The listener to be invoked in response to the event.</param></member>
        <member name="M:System.Html.DocumentInstance.RemoveEventListener(System.String,System.Html.ElementEventListener,System.Boolean)">
            <summary>
            Removes a listener for the specified event.
            </summary>
            <param name="eventName">The name of the event such as 'load'.</param>
            <param name="listener">The listener to be invoked in response to the event.</param>
            <param name="useCapture">Whether the listener wants to initiate capturing the event.</param></member>
        <member name="M:System.Html.Element.AddEventListener(System.String,System.Html.ElementEventListener,System.Boolean)">
            <summary>
            Adds a listener for the specified event.
            </summary>
            <param name="eventName">The name of the event such as 'load'.</param>
            <param name="listener">The listener to be invoked in response to the event.</param>
            <param name="useCapture">Whether the listener wants to initiate capturing the event.</param></member>
        <member name="M:System.Html.Element.AddEventListener(System.String,System.Html.IElementEventHandler,System.Boolean)">
            <summary>
            Adds a listener for the specified event.
            </summary>
            <param name="eventName">The name of the event such as 'load'.</param>
            <param name="handler">The handler to be invoked in response to the event.</param>
            <param name="useCapture">Whether the handler wants to initiate capturing the event.</param></member>
        <member name="M:System.Html.Element.RemoveEventListener(System.String,System.Html.ElementEventListener,System.Boolean)">
            <summary>
            Removes a listener for the specified event.
            </summary>
            <param name="eventName">The name of the event such as 'load'.</param>
            <param name="listener">The listener to be invoked in response to the event.</param>
            <param name="useCapture">Whether the listener wants to initiate capturing the event.</param></member>
        <member name="M:System.Html.Element.RemoveEventListener(System.String,System.Html.IElementEventHandler,System.Boolean)">
            <summary>
            Removes a listener for the specified event.
            </summary>
            <param name="eventName">The name of the event such as 'load'.</param>
            <param name="handler">The handler to be invoked in response to the event.</param>
            <param name="useCapture">Whether the handler wants to initiate capturing the event.</param></member>
        <member name="T:System.Html.ErrorHandler">
            <summary>
            Delegate for the window unhandled exception handler.
            </summary>
            <param name="message">The error message.</param>
            <param name="url">The URL of the script where the error occurred.</param>
            <param name="line">The line number where the error occurred.</param>
            <returns>true if the error was handled; false otherwise.</returns></member>
        <member name="P:System.Html.History.Length">
            <summary>
            Retrieves the number of elements in the history list.
            </summary></member>
        <member name="P:System.Html.History.State">
            <summary>
            Retrieves the current state object.
            </summary></member>
        <member name="M:System.Html.History.Back">
            <summary>
            Navigates to the previous page in history.
            </summary></member>
        <member name="M:System.Html.History.Forward">
            <summary>
            Navigates to the next page in history.
            </summary></member>
        <member name="M:System.Html.History.Go(System.Int32)">
            <summary>
            Navigates to a page in history relative to the current page.
            </summary>
            <param name="delta">The number of pages in history to go back (negative) or forward (positive).</param></member>
        <member name="M:System.Html.History.PushState(System.Object,System.String)">
            <summary>
            Pushes the given data onto the session history stack.
            </summary>
            <param name="data">The data to serialize into JSON format.</param>
            <param name="title">The title to place into history.</param></member>
        <member name="M:System.Html.History.PushState(System.Object,System.String,System.String)">
            <summary>
            Pushes the given data onto the session history stack.
            </summary>
            <param name="data">The data to serialize into JSON format.</param>
            <param name="title">The title to place into history.</param>
            <param name="url">The URL to place into history.</param></member>
        <member name="M:System.Html.History.ReplaceState(System.Object,System.String)">
            <summary>
            Updates the most recent entry on the history stack.
            </summary>
            <param name="data">The data to serialize into JSON format.</param>
            <param name="title">The title to place into history.</param></member>
        <member name="M:System.Html.History.ReplaceState(System.Object,System.String,System.String)">
            <summary>
            Updates the most recent entry on the history stack.
            </summary>
            <param name="data">The data to serialize into JSON format.</param>
            <param name="title">The title to place into history.</param>
            <param name="url">The URL to place into history.</param></member>
        <member name="M:System.Html.Location.Assign(System.String)">
            <summary>
            Navigates the window to a new location and updates the browser's history.
            </summary>
            <param name="url">The URL to navigate to.</param></member>
        <member name="M:System.Html.Location.Reload">
            <summary>
            Reload the current document.
            </summary></member>
        <member name="M:System.Html.Location.Reload(System.Boolean)">
            <summary>
            Reload the current document.
            </summary>
            <param name="forceGet">If true, the document will be reloaded from the server, otherwise it may be loaded from the browser's cache.</param></member>
        <member name="M:System.Html.Location.Replace(System.String)">
            <summary>
            Navigates the window to a new location without updating the browser's history.
            </summary>
            <param name="url">The URL to navigate to.</param></member>
        <member name="F:System.Html.Media.Graphics.CompositeOperation.Copy">
            <summary>
            A (B is ignored). Display the source image instead of the destination image.
            </summary></member>
        <member name="F:System.Html.Media.Graphics.CompositeOperation.DestinationAtop">
            <summary>
            B atop A. Display the destination image wherever both images are opaque.
            Display the source image wherever the source image is opaque but the
            destination image is transparent. Display transparency elsewhere.
            </summary></member>
        <member name="F:System.Html.Media.Graphics.CompositeOperation.DestinationIn">
            <summary>
            B in A. Display the destination image wherever both the destination image and
            source image are opaque. Display transparency elsewhere.
            </summary></member>
        <member name="F:System.Html.Media.Graphics.CompositeOperation.DestinationOut">
            <summary>
            B out A. Display the destination image wherever the destination image is opaque
            and the source image is transparent. Display transparency elsewhere.
            </summary></member>
        <member name="F:System.Html.Media.Graphics.CompositeOperation.DestinationOver">
            <summary>
            B over A. Display the destination image wherever the destination image is opaque.
            Display the source image elsewhere.
            </summary></member>
        <member name="F:System.Html.Media.Graphics.CompositeOperation.Lighter">
            <summary>
            A plus B. Display the sum of the source image and destination image, with color
            values approaching 1 as a limit.
            </summary></member>
        <member name="F:System.Html.Media.Graphics.CompositeOperation.SourceAtop">
            <summary>
            A atop B. Display the source image wherever both images are opaque. Display the
            destination image wherever the destination image is opaque but the source image
            is transparent. Display transparency elsewhere.
            </summary></member>
        <member name="F:System.Html.Media.Graphics.CompositeOperation.SourceIn">
            <summary>
            A in B. Display the source image wherever both the source image and destination
            image are opaque. Display transparency elsewhere.
            </summary></member>
        <member name="F:System.Html.Media.Graphics.CompositeOperation.SourceOut">
            <summary>
            A out B. Display the source image wherever the source image is opaque and the
            destination image is transparent. Display transparency elsewhere.
            </summary></member>
        <member name="F:System.Html.Media.Graphics.CompositeOperation.SourceOver">
            <summary>
            A over B. Display the source image wherever the source image is opaque. Display the
            destination image elsewhere. This is the default option.
            </summary></member>
        <member name="F:System.Html.Media.Graphics.CompositeOperation.Xor">
            <summary>
            A xor B. Exclusive OR of the source image and destination image.
            </summary></member>
        <member name="P:System.Html.Navigator.AppName">
            <summary>
            Returns the name of the browser.
            </summary></member>
        <member name="P:System.Html.Navigator.AppVersion">
            <summary>
            Returns the version of the browser.
            </summary></member>
        <member name="P:System.Html.Navigator.BrowserLanguage">
            <summary>
            Retrieves the current language (applies to IE and Opera).
            </summary></member>
        <member name="P:System.Html.Navigator.Language">
            <summary>
            Returns a string representing the language of the browser (applies to Gecko, Opera, and WebKit).
            </summary></member>
        <member name="P:System.Html.Navigator.SystemLanguage">
            <summary>
            Retrieves the default language used by the operating system (applies to IE).
            </summary></member>
        <member name="P:System.Html.Navigator.UserLanguage">
            <summary>
            Retrieves the operating system's natural language setting (applies to IE and Opera).
            </summary></member>
        <member name="P:System.Html.Navigator.Platform">
            <summary>
            Returns the name of the platform.
            </summary></member>
        <member name="P:System.Html.Navigator.Plugins">
            <summary>
            Returns a PluginArray object, listing the plugins installed in the application.
            </summary></member>
        <member name="P:System.Html.Navigator.UserAgent">
            <summary>
            Returns the complete User-Agent header.
            </summary></member>
        <member name="T:System.Html.Screen">
            <summary>
            The screen object represents information about the current desktop.
            </summary></member>
        <member name="M:System.Html.SelectElement.Add(System.Html.OptionElement)">
            <summary>
            Adds an element to the end of the <see cref="P:System.Html.SelectElement.Options" /> collection.
            </summary>
            <param name="option">Element to add to the <see cref="P:System.Html.SelectElement.Options" /> collection.</param></member>
        <member name="M:System.Html.SelectElement.Add(System.Html.OptionElement,System.Int32)">
            <summary>
            Adds an element to the <see cref="P:System.Html.SelectElement.Options" /> collection (IE only).
            </summary>
            <param name="option">Element to add to the <see cref="P:System.Html.SelectElement.Options" /> collection.</param>
            <param name="index">Specifies the index position in the collection where the element is placed.</param></member>
        <member name="M:System.Html.SelectElement.Add(System.Html.OptionElement,System.Html.OptionElement)">
            <summary>
            Adds an element to the <see cref="P:System.Html.SelectElement.Options" /> collection (Firefox only).
            </summary>
            <param name="option">Element to add to the <see cref="P:System.Html.SelectElement.Options" /> collection.</param>
            <param name="before">The element before which to add <paramref name="option" />.</param></member>
        <member name="M:System.Html.SelectElement.Remove(System.Int32)">
            <summary>
            Removes an <see cref="T:System.Html.OptionElement" /> from the <see cref="P:System.Html.SelectElement.Options" /> collection.
            </summary>
            <param name="index"></param></member>
        <member name="T:System.Html.Editing.Selection">
            <summary>
            Represents the active selection, which is a highlighted block of text, and/or other elements in the document on which a user or a script
            can carry out some action.
            </summary></member>
        <member name="P:System.Html.Style.Accelerator">
            <summary>Whether the object contains an accelerator key.</summary></member>
        <member name="P:System.Html.Style.Background">
            <summary>The background properties of an object.</summary></member>
        <member name="P:System.Html.Style.BackgroundAttachment">
            <summary>How the background image is attached to the object within the document.</summary></member>
        <member name="P:System.Html.Style.BackgroundColor">
            <summary>The color behind the content of the object.</summary></member>
        <member name="P:System.Html.Style.BackgroundImage">
            <summary>The background image of the object.</summary></member>
        <member name="P:System.Html.Style.BackgroundPosition">
            <summary>The position of the background of the object.</summary></member>
        <member name="P:System.Html.Style.BackgroundPositionX">
            <summary>The x-coordinate of the backgroundPosition property.</summary></member>
        <member name="P:System.Html.Style.BackgroundPositionY">
            <summary>The y-coordinate of the backgroundPosition property.</summary></member>
        <member name="P:System.Html.Style.BackgroundRepeat">
            <summary>How the background of the object is tiled.</summary></member>
        <member name="P:System.Html.Style.Border">
            <summary>The properties to draw a border around the object.</summary></member>
        <member name="P:System.Html.Style.BorderBottom">
            <summary>The properties of the bottom border of the object.</summary></member>
        <member name="P:System.Html.Style.BorderBottomColor">
            <summary>The color of the bottom border of the object.</summary></member>
        <member name="P:System.Html.Style.BorderBottomStyle">
            <summary>The style of the bottom border of the object.</summary></member>
        <member name="P:System.Html.Style.BorderBottomWidth">
            <summary>The width of the bottom border of the object.</summary></member>
        <member name="P:System.Html.Style.BorderCollapse">
            <summary>Whether the row and cell borders of a table are joined in a single border or detached.</summary></member>
        <member name="P:System.Html.Style.BorderColor">
            <summary>The border color of the object.</summary></member>
        <member name="P:System.Html.Style.BorderLeft">
            <summary>The properties of the left border of the object.</summary></member>
        <member name="P:System.Html.Style.BorderLeftColor">
            <summary>The color of the left border of the object.</summary></member>
        <member name="P:System.Html.Style.BorderLeftStyle">
            <summary>The style of the left border of the object.</summary></member>
        <member name="P:System.Html.Style.BorderLeftWidth">
            <summary>The width of the left border of the object.</summary></member>
        <member name="P:System.Html.Style.BorderRight">
            <summary>The properties of the right border of the object.</summary></member>
        <member name="P:System.Html.Style.BorderRightColor">
            <summary>The color of the right border of the object.</summary></member>
        <member name="P:System.Html.Style.BorderRightStyle">
            <summary>The style of the right border of the object.</summary></member>
        <member name="P:System.Html.Style.BorderRightWidth">
            <summary>The width of the right border of the object.</summary></member>
        <member name="P:System.Html.Style.BorderStyle">
            <summary>The style of the borders of the object.</summary></member>
        <member name="P:System.Html.Style.BorderTop">
            <summary>The properties of the top border of the object.</summary></member>
        <member name="P:System.Html.Style.BorderTopColor">
            <summary>The color of the top border of the object.</summary></member>
        <member name="P:System.Html.Style.BorderTopStyle">
            <summary>The style of the top border of the object.</summary></member>
        <member name="P:System.Html.Style.BorderTopWidth">
            <summary>The width of the top border of the object.</summary></member>
        <member name="P:System.Html.Style.BorderWidth">
            <summary>The width of the borders of the object.</summary></member>
        <member name="P:System.Html.Style.Bottom">
            <summary>The bottom position of the object in relation to the bottom of the next positioned object.</summary></member>
        <member name="P:System.Html.Style.Clear">
            <summary>Whether the object allows floating objects on its left side, right side, or both, so that the next text displays past the floating objects.</summary></member>
        <member name="P:System.Html.Style.Clip">
            <summary>Which part of a positioned object is visible.</summary></member>
        <member name="P:System.Html.Style.Color">
            <summary>The color of the text of the object.</summary></member>
        <member name="P:System.Html.Style.CssFloat">
            <summary>The side of the object the text will flow.</summary></member>
        <member name="P:System.Html.Style.CssText">
            <summary>The persisted representation of this style.</summary></member>
        <member name="P:System.Html.Style.Cursor">
            <summary>The type of cursor to display as the mouse pointer moves over the object.</summary></member>
        <member name="P:System.Html.Style.Direction">
            <summary>The reading order of content within the object.</summary></member>
        <member name="P:System.Html.Style.Display">
            <summary>Whether the object is rendered.</summary></member>
        <member name="P:System.Html.Style.Filter">
            <summary>The collection of filters applied to an object. (Specific to Internet Explorer)</summary></member>
        <member name="P:System.Html.Style.Font">
            <summary>The font properties of the object or one or more of six user-preference fonts.</summary></member>
        <member name="P:System.Html.Style.FontFamily">
            <summary>The name of the font used for text in the object.</summary></member>
        <member name="P:System.Html.Style.FontSize">
            <summary>The font size used for text in the object.</summary></member>
        <member name="P:System.Html.Style.FontStyle">
            <summary>The font style of the object as italic, normal, or oblique.</summary></member>
        <member name="P:System.Html.Style.FontVariant">
            <summary>Whether the text of the object is in small capital letters.</summary></member>
        <member name="P:System.Html.Style.FontWeight">
            <summary>The weight of the font of the object.</summary></member>
        <member name="P:System.Html.Style.Height">
            <summary>The height of the object.</summary></member>
        <member name="P:System.Html.Style.Left">
            <summary>The position of the object relative to the left edge of the next positioned object in the document hierarchy.</summary></member>
        <member name="P:System.Html.Style.LetterSpacing">
            <summary>The amount of additional space between letters in the object.</summary></member>
        <member name="P:System.Html.Style.LineHeight">
            <summary>The distance between lines in the object.</summary></member>
        <member name="P:System.Html.Style.ListStyle">
            <summary>The listStyle properties of the object.</summary></member>
        <member name="P:System.Html.Style.ListStyleImage">
            <summary>The image to use as a list-item marker for the object.</summary></member>
        <member name="P:System.Html.Style.ListStylePosition">
            <summary>SHow the list-item marker is drawn relative to the content of the object.</summary></member>
        <member name="P:System.Html.Style.ListStyleType">
            <summary>The type of the list-item marker for the object.</summary></member>
        <member name="P:System.Html.Style.Margin">
            <summary>The width of the top, right, bottom, and left margins of the object.</summary></member>
        <member name="P:System.Html.Style.MarginBottom">
            <summary>The height of the bottom margin of the object.</summary></member>
        <member name="P:System.Html.Style.MarginLeft">
            <summary>The width of the left margin of the object.</summary></member>
        <member name="P:System.Html.Style.MarginRight">
            <summary>The width of the right margin of the object.</summary></member>
        <member name="P:System.Html.Style.MarginTop">
            <summary>The height of the top margin of the object.</summary></member>
        <member name="P:System.Html.Style.MaxHeight">
            <summary>The maximum height for displayable block level elements.</summary></member>
        <member name="P:System.Html.Style.MaxWidth">
            <summary>The maximum width for displayable block level elements.</summary></member>
        <member name="P:System.Html.Style.MinHeight">
            <summary>The minimum height for an element.</summary></member>
        <member name="P:System.Html.Style.MinWidth">
            <summary>The minimum width for displayable block level element.</summary></member>
        <member name="P:System.Html.Style.MsInterpolationMode">
            <summary>The interpolation (resampling) method used to stretch images. (Specific to Internet Explorer)</summary></member>
        <member name="P:System.Html.Style.Opacity">
            <summary>How to blend the object into the rendering.</summary></member>
        <member name="P:System.Html.Style.Overflow">
            <summary>How to manage the content of the object when the content exceeds the height or width of the object.</summary></member>
        <member name="P:System.Html.Style.OverflowX">
            <summary>How to manage the content of the object when the content exceeds the width of the object.</summary></member>
        <member name="P:System.Html.Style.OverflowY">
            <summary>How to manage the content of the object when the content exceeds the height of the object.</summary></member>
        <member name="P:System.Html.Style.Padding">
            <summary>The amount of space to insert between the object and its margin or, if there is a border, between the object and its border.</summary></member>
        <member name="P:System.Html.Style.PaddingBottom">
            <summary>The amount of space to insert between the bottom border of the object and the content.</summary></member>
        <member name="P:System.Html.Style.PaddingLeft">
            <summary>The amount of space to insert between the left border of the object and the content.</summary></member>
        <member name="P:System.Html.Style.PaddingRight">
            <summary>The amount of space to insert between the right border of the object and the content.</summary></member>
        <member name="P:System.Html.Style.PaddingTop">
            <summary>The amount of space to insert between the top border of the object and the content.</summary></member>
        <member name="P:System.Html.Style.PageBreakAfter">
            <summary>Whether a page break occurs after the object.</summary></member>
        <member name="P:System.Html.Style.PageBreakBefore">
            <summary>Whether a page break occurs before the object.</summary></member>
        <member name="P:System.Html.Style.PixelBottom">
            <summary>The bottom position of the object.</summary></member>
        <member name="P:System.Html.Style.PixelHeight">
            <summary>The height of the object.</summary></member>
        <member name="P:System.Html.Style.PixelLeft">
            <summary>The left position of the object.</summary></member>
        <member name="P:System.Html.Style.PixelRight">
            <summary>The right position of the object.</summary></member>
        <member name="P:System.Html.Style.PixelTop">
            <summary>The top position of the object.</summary></member>
        <member name="P:System.Html.Style.PixelWidth">
            <summary>The width of the object.</summary></member>
        <member name="P:System.Html.Style.PosBottom">
            <summary>The bottom position of the object in the units specified by the bottom attribute.</summary></member>
        <member name="P:System.Html.Style.PosHeight">
            <summary>The height of the object in the units specified by the height attribute.</summary></member>
        <member name="P:System.Html.Style.Position">
            <summary>The type of positioning used for the object.</summary></member>
        <member name="P:System.Html.Style.PosLeft">
            <summary>The left position of the object in the units specified by the left attribute.</summary></member>
        <member name="P:System.Html.Style.PosRight">
            <summary>The right position of the object in the units specified by the right attribute.</summary></member>
        <member name="P:System.Html.Style.PosTop">
            <summary>The top position of the object in the units specified by the top attribute.</summary></member>
        <member name="P:System.Html.Style.PosWidth">
            <summary>The width of the object in the units specified by the width attribute.</summary></member>
        <member name="P:System.Html.Style.Right">
            <summary>The position of the object relative to the right edge of the next positioned object in the document hierarchy.</summary></member>
        <member name="P:System.Html.Style.StyleFloat">
            <summary>The side of the object the text will flow.</summary></member>
        <member name="P:System.Html.Style.TableLayout">
            <summary>Whether the table layout is fixed.</summary></member>
        <member name="P:System.Html.Style.TextAlign">
            <summary>Whether The text in the object is left-aligned, right-aligned, centered, or justified.</summary></member>
        <member name="P:System.Html.Style.TextDecoration">
            <summary>Indicates whether the text in the object has blink, line-through, overline, or underline decorations.</summary></member>
        <member name="P:System.Html.Style.TextDecorationBlink">
            <summary>Whether the object's text "blinks."</summary></member>
        <member name="P:System.Html.Style.TextDecorationLineThrough">
            <summary>Whether the text in the object has a line drawn through it.</summary></member>
        <member name="P:System.Html.Style.TextDecorationNone">
            <summary>Whether the textDecoration property for the object has been set to none.</summary></member>
        <member name="P:System.Html.Style.TextDecorationOverline">
            <summary>Whether the text in the object has a line drawn over it.</summary></member>
        <member name="P:System.Html.Style.TextDecorationUnderline">
            <summary>Whether the text in the object is underlined.</summary></member>
        <member name="P:System.Html.Style.TextIndent">
            <summary>The indentation of the first line of text in the object.</summary></member>
        <member name="P:System.Html.Style.TextJustify">
            <summary>The type of alignment used to justify text in the object.</summary></member>
        <member name="P:System.Html.Style.TextOverflow">
            <summary>Indicates whether to render ellipses(...) to indicate text overflow.</summary></member>
        <member name="P:System.Html.Style.TextTransform">
            <summary>The rendering of the text in the object.</summary></member>
        <member name="P:System.Html.Style.Top">
            <summary>The position of the object relative to the top of the next positioned object in the document hierarchy.</summary></member>
        <member name="P:System.Html.Style.VerticalAlign">
            <summary>The vertical alignment of the object.</summary></member>
        <member name="P:System.Html.Style.Visibility">
            <summary>Whether the content of the object is displayed.</summary></member>
        <member name="P:System.Html.Style.WhiteSpace">
            <summary>Indicates whether lines are automatically broken inside the object.</summary></member>
        <member name="P:System.Html.Style.Width">
            <summary>The width of the object.</summary></member>
        <member name="P:System.Html.Style.WordSpacing">
            <summary>The amount of additional space between words in the object.</summary></member>
        <member name="P:System.Html.Style.WordWrap">
            <summary>Whether to break words when the content exceeds the boundaries of its container.</summary></member>
        <member name="P:System.Html.Style.WritingMode">
            <summary>The direction and flow of the content in the object.</summary></member>
        <member name="P:System.Html.Style.ZIndex">
            <summary>The stacking order of positioned objects.</summary></member>
        <member name="P:System.Html.Style.Zoom">
            <summary>The magnification scale of the object.</summary></member>
        <member name="T:System.Html.Window">
            <summary>
            The window object represents the current browser window, and is the top-level
            scripting object.
            </summary></member>
        <member name="P:System.Html.Window.ClipboardData">
            <summary>
            IE only.
            </summary></member>
        <member name="P:System.Html.Window.Event">
            <summary>
            Provides information about the current event being handled.
            </summary></member>
        <member name="M:System.Html.Window.AddEventListener(System.String,System.Html.ElementEventListener)">
            <summary>
            Adds a listener for the specified event.
            </summary>
            <param name="eventName">The name of the event such as 'load'.</param>
            <param name="listener">The listener to be invoked in response to the event.</param></member>
        <member name="M:System.Html.Window.AddEventListener(System.String,System.Html.ElementEventListener,System.Boolean)">
            <summary>
            Adds a listener for the specified event.
            </summary>
            <param name="eventName">The name of the event such as 'load'.</param>
            <param name="listener">The listener to be invoked in response to the event.</param>
            <param name="useCapture">Whether the listener wants to initiate capturing the event.</param></member>
        <member name="M:System.Html.Window.RemoveEventListener(System.String,System.Html.ElementEventListener)">
            <summary>
            Removes a listener for the specified event.
            </summary>
            <param name="eventName">The name of the event such as 'load'.</param>
            <param name="listener">The listener to be invoked in response to the event.</param></member>
        <member name="M:System.Html.Window.RemoveEventListener(System.String,System.Html.ElementEventListener,System.Boolean)">
            <summary>
            Removes a listener for the specified event.
            </summary>
            <param name="eventName">The name of the event such as 'load'.</param>
            <param name="listener">The listener to be invoked in response to the event.</param>
            <param name="useCapture">Whether the listener wants to initiate capturing the event.</param></member>
        <member name="M:System.Html.Window.ShowModalDialog(System.String,System.Object,System.String)">
            <summary>
            Delegate that indicates the ability of the browser
            to show a modal dialog.
            </summary>
            <remarks>
            Not all browsers support this function, so code using
            this needs to check for existence of the feature or the browser.
            </remarks></member>
        <member name="M:System.Html.Window.Alert(System.String)">
            <summary>
            Displays a message box containing the specified message text.
            </summary>
            <param name="message">The text of the message.</param></member>
        <member name="M:System.Html.Window.Alert(System.Boolean)">
            <summary>
            Displays a message box containing the specified value converted
            into a string.
            </summary>
            <param name="b">The boolean to display.</param></member>
        <member name="M:System.Html.Window.Alert(System.DateTime)">
            <summary>
            Displays a message box containing the specified value converted
            into a string.
            </summary>
            <param name="d">The date to display.</param></member>
        <member name="M:System.Html.Window.Alert(System.Double)">
            <summary>
            Displays a message box containing the specified value converted
            into a string.
            </summary>
            <param name="d">The number to display.</param></member>
        <member name="M:System.Html.Window.Confirm(System.String)">
            <summary>
            Prompts the user with a yes/no question.
            </summary>
            <param name="message">The text of the question.</param>
            <returns>true if the user chooses yes; false otherwise.</returns></member>
        <member name="M:System.Html.Window.Prompt(System.String)">
            <summary>
            Prompts the user to enter a value.
            </summary>
            <param name="message">The text of the prompt.</param>
            <returns>The value entered by the user.</returns></member>
        <member name="M:System.Html.Window.Prompt(System.String,System.String)">
            <summary>
            Prompts the user to enter a value, along with providing a default
            value.
            </summary>
            <param name="message">The text of the prompt.</param>
            <param name="defaultValue">The default value for the prompt.</param>
            <returns>The value entered by the user.</returns></member>
        <member name="T:System.Html.WindowInstance">
            <summary>
            The window object represents the current browser window, and is the top-level
            scripting object.
            </summary></member>
        <member name="M:System.Html.WindowInstance.AddEventListener(System.String,System.Html.ElementEventListener)">
            <summary>
            Adds a listener for the specified event.
            </summary>
            <param name="eventName">The name of the event such as 'load'.</param>
            <param name="listener">The listener to be invoked in response to the event.</param></member>
        <member name="M:System.Html.WindowInstance.AddEventListener(System.String,System.Html.ElementEventListener,System.Boolean)">
            <summary>
            Adds a listener for the specified event.
            </summary>
            <param name="eventName">The name of the event such as 'load'.</param>
            <param name="listener">The listener to be invoked in response to the event.</param>
            <param name="useCapture">Whether the listener wants to initiate capturing the event.</param></member>
        <member name="M:System.Html.WindowInstance.RemoveEventListener(System.String,System.Html.ElementEventListener)">
            <summary>
            Removes a listener for the specified event.
            </summary>
            <param name="eventName">The name of the event such as 'load'.</param>
            <param name="listener">The listener to be invoked in response to the event.</param></member>
        <member name="M:System.Html.WindowInstance.RemoveEventListener(System.String,System.Html.ElementEventListener,System.Boolean)">
            <summary>
            Removes a listener for the specified event.
            </summary>
            <param name="eventName">The name of the event such as 'load'.</param>
            <param name="listener">The listener to be invoked in response to the event.</param>
            <param name="useCapture">Whether the listener wants to initiate capturing the event.</param></member>
        <member name="T:System.Xml.XmlDocument">
            <summary>
            Represents the hierarchy of node objects parsed from XML markup.
            </summary></member>
    </members>
</doc>
